version: '3.5'

volumes:
    db-data:

networks:
    default:
        external:
            name: hackathon

services:
    redis:
        image: fshigueru/redis
        container_name: ${PROJECT_NAME}.redis
        ports:
            - "6379"
        restart: always
        env_file: .env
        tty: true
        volumes:
            - "./redis/conf/redis.conf:/etc/redis/redis.conf"
            - "./.data/redis:/data"

    php:
        image: fshigueru/php7.1
        container_name: ${PROJECT_NAME}.php
        expose:
            - "9000"
        restart: always
        env_file: .env
        tty: true
        volumes:
            - "./php/conf/php.ini:/usr/local/etc/php/conf.d/custom.ini"
            - "./src:/src"
            - "./.log/php/cache:/var/www/html/var/cache"
            - "./.log/php/log:/var/www/html/var/log"
            - "~/.ssh:/root/.ssh:ro"
        links:
            - redis
            - mongo

    nginx:
        image: fshigueru/nginx
        container_name: ${PROJECT_NAME}.nginx
        ports:
            - "8081:80"
        restart: always
        env_file: .env
        tty: true
        volumes:
            - "./nginx/conf/api:/etc/nginx/conf.d"
            - "./src:/src"
        links:
            - php
            - redis
            - mongo
            - elasticsearch
            - kibana
        depends_on:
            - php

    mongo:
        image: mongo
        container_name: ${PROJECT_NAME}.mongodb
        volumes:
            - ./.data/mongodb:/data/db
            - ./.data/mongodb:/data/configdb
        ports:
            - "27017:27017"

    mongo-express:
        image: mongo-express
        container_name: ${PROJECT_NAME}.mongo-express
        ports:
            - 8082:8081
        environment:
            ME_CONFIG_BASICAUTH_USERNAME: root
            ME_CONFIG_BASICAUTH_PASSWORD: root
            ME_CONFIG_MONGODB_PORT: 27017
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: root
        links:
            - mongo

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        container_name: ${PROJECT_NAME}.elasticsearch
        ports:
            - 9200:9200
        volumes:
            - ./.data/elasticsearch/data:/usr/share/elasticsearch/data
            - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        environment:
            - discovery.type=single-node

    kibana:
        image: docker.elastic.co/kibana/kibana-oss:6.3.2
        container_name: ${PROJECT_NAME}.kibana
        ports:
            - 5601:5601